name: Build and publish distribution to pypi

on: push

jobs:
  build_wheels:
    name: ${{ matrix.os }} • ${{ matrix.arch }} • ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        #os: [ubuntu-latest, windows-latest, macos-13, macos-14]
        os: [windows-latest]
        python: [cp37, cp38, cp39, cp310, cp311, cp312, pp37, pp38, pp39, pp310]
        arch: [auto]  # default for non-Windows
        exclude:
          # Exclude Python 3.7 on newer platforms
          - os: macos-14
            python: cp37
          - os: windows-latest
            python: cp37
          - os: macos-14
            python: pp37
          - os: windows-latest
            python: pp37
          # Skip PyPy on Windows
          - os: windows-latest
            python: pp38
          - os: windows-latest
            python: pp39
          - os: windows-latest
            python: pp310
        include:
          # Split Windows builds into 32 and 64 bit explicitly
          - os: windows-latest
            python: cp38
            arch: win32
          - os: windows-latest
            python: cp38
            arch: win_amd64
          - os: windows-latest
            python: cp39
            arch: win32
          - os: windows-latest
            python: cp39
            arch: win_amd64
          - os: windows-latest
            python: cp310
            arch: win32
          - os: windows-latest
            python: cp310
            arch: win_amd64
          - os: windows-latest
            python: cp311
            arch: win32
          - os: windows-latest
            python: cp311
            arch: win_amd64
          - os: windows-latest
            python: cp312
            arch: win32
          - os: windows-latest
            python: cp312
            arch: win_amd64
            
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker cache
        if: runner.os == 'Linux'
        uses: ScribeMD/docker-cache@0.4.0
        with:
          key: docker-${{ runner.os }}
            
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.arch }}
          CIBW_ARCHS_MACOS: auto
          CIBW_SKIP: "pp*-manylinux_i686 pp*-musllinux_i686"
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"

      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.python }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl

